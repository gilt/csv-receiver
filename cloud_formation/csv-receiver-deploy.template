{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "CFHelperStackName": {
      "Type": "String",
      "Description": "The name of the stack where you installed the CloudFormation helper functions. See https://github.com/gilt/cloudformation-helpers."
    },
    "S3Bucket": {
      "Type": "String",
      "Description": "The location where CSVs will be written. Must already exist."
    }
  },
  "Resources": {
    "CFHelperStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/com.gilt.public.backoffice/cloudformation_templates/lookup_stack_outputs.template"
      }
    },
    "CFHelper": {
      "Type": "Custom::CFHelper",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt" : ["CFHelperStack", "Outputs.LookupStackOutputsArn"] },
        "StackName": { "Ref": "CFHelperStackName" }
      },
      "DependsOn": [
        "CFHelperStack"
      ]
    },
    "CsvReceiverRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [ "lambda.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ConfigReader",
            "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Resource": { "Fn::Join": [ ".", ["arn:aws:s3:::aws", "lambda", { "Ref": "AWS::Region" }, { "Ref": "AWS::AccountId" }, "config/*" ] ] }
                }
              ]
            }
          },
          {
            "PolicyName": "LogWriter",
            "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          },
          {
            "PolicyName": "S3Writer",
            "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject",
                    "s3:ListBucket"
                  ],
                  "Resource": [
                    { "Fn::Join" : ["", [ "arn:aws:s3:::", { "Ref" : "S3Bucket" } ] ] },
                    { "Fn::Join" : ["", [ "arn:aws:s3:::", { "Ref" : "S3Bucket" }, "/*" ] ] }
                  ]
                }
              ]
            }
          },
          {
            "PolicyName": "SNSPublisher",
            "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:CreateTopic",
                    "sns:ListTopics",
                    "sns:Publish"
                  ],
                  "Resource": { "Fn::Join" : ["", ["arn:aws:sns:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":*"] ] }
                }
              ]
            }
          }
        ]
      }
    },
    "CsvReceiverFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "com.gilt.public.backoffice",
          "S3Key": "lambda_functions/csv-receiver.zip"
        },
        "Description": "Receives a CSV in the event and publishes the rows to SNS.",
        "Handler": "app/main.handle",
        "Role": {"Fn::GetAtt" : [ "CsvReceiverRole", "Arn" ] },
        "Runtime": "nodejs4.3",
        "Timeout": 300
      },
      "DependsOn": [
        "CsvReceiverRole"
      ]
    },
    "CsvReceiverConfig": {
      "Type": "Custom::S3PutObject",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt" : ["CFHelper", "S3PutObjectFunctionArn"] },
        "Bucket": { "Fn::Join": [ ".", ["aws", "lambda", { "Ref": "AWS::Region" }, { "Ref": "AWS::AccountId" }, "config" ] ] },
        "Key": { "Fn::Join": [ ".", [{ "Ref": "CsvReceiverFunction" }, "json" ] ] },
        "Body": { "Fn::Join": [ "", ["{\"Bucket\":\"", { "Ref": "S3Bucket" }, "\"}" ] ] }
      },
      "DependsOn": [
        "CFHelper",
        "CsvReceiverFunction"
      ]
    },
    "CsvReceiverEndpoint": {
      "Type": "Custom::ApiGatewayCreateApi",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt" : ["CFHelper", "ApiGatewayCreateApiFunctionArn"] },
        "name": { "Fn::Join": [ "-", ["api", { "Ref": "AWS::StackName" } ] ] },
        "description": "Receives CSV via HTTP POST",
        "endpoints": {
          "{stream_name}": {
            "POST": {
              "authorizationType": "NONE",
              "integration": {
                "type": "AWS",
                "integrationHttpMethod": "POST",
                "uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      { "Ref": "AWS::Region" },
                      ":lambda:path/2015-03-31/functions/arn:aws:lambda:",
                      { "Ref": "AWS::Region" },
                      ":",
                      { "Ref": "AWS::AccountId" },
                      ":function:",
                      { "Ref": "CsvReceiverFunction" },
                      "/invocations"
                    ]
                  ]
                },
                "requestTemplates": {
                  "text/plain": "{\"Body\": $input.json('$'), \"StreamName\": \"$input.params('stream_name')\"}"
                },
                "contentType": "application/json"
              }
            }
          }
        },
        "version": "prod"
      },
      "DependsOn": [
        "CFHelper",
        "CsvReceiverFunction"
      ]
    },
    "CsvReceiverApiPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": { "Fn::GetAtt": [ "CsvReceiverFunction", "Arn" ] },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              { "Ref": "AWS::Region" },
              ":",
              { "Ref": "AWS::AccountId" },
              ":",
              { "Fn::GetAtt" : ["CsvReceiverEndpoint", "restApiId"] },
              "/*/POST/*"
            ]
          ]
        }
      },
      "DependsOn": [
        "CsvReceiverFunction",
        "CsvReceiverEndpoint"
      ]
    },
    "NotificationQueue": {
      "Type" : "AWS::SNS::Topic",
      "Properties" : {
        "TopicName" : { "Ref" : "CsvReceiverFunction" },
        "Subscription": [
          {
            "Protocol": "lambda",
            "Endpoint": { "Fn::GetAtt": [ "CsvReceiverFunction", "Arn" ] }
          }
        ]
      },
      "DependsOn": [
        "CsvReceiverFunction"
      ]
    },
    "NotificationPolicy": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": { "Fn::GetAtt": [ "CsvReceiverFunction", "Arn" ] },
        "Principal": "sns.amazonaws.com",
        "SourceArn": { "Ref": "NotificationQueue"}
      },
      "DependsOn": [
        "CsvReceiverFunction",
        "NotificationQueue"
      ]
    },
    "ErrorMetric": {
      "Type": "Custom::PutMetricFilter",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt" : ["CFHelper", "CloudWatchLogsPutMetricFilterFunctionArn"] },
        "filterName": "csv-receiver-errors",
        "filterPattern": "Error",
        "logGroupName": { "Fn::Join": [ "", ["/aws/lambda/", { "Ref": "CsvReceiverFunction" } ] ] },
        "metricTransformations": [
          {
            "metricName": "csv-receiver-errors",
            "metricNamespace": "csv-receiver",
            "metricValue": "1"
          }
        ]
      },
      "DependsOn": [
        "CFHelper",
        "CsvReceiverFunction"
      ]
    },
    "MessagesMetric": {
      "Type": "Custom::PutMetricFilter",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt" : ["CFHelper", "CloudWatchLogsPutMetricFilterFunctionArn"] },
        "filterName": "messages-published-to-sns",
        "filterPattern": "Published message to SNS",
        "logGroupName": { "Fn::Join": [ "", ["/aws/lambda/", { "Ref": "CsvReceiverFunction" } ] ] },
        "metricTransformations": [
          {
            "metricName": "messages-published-to-sns",
            "metricNamespace": "csv-receiver",
            "metricValue": "1"
          }
        ]
      },
      "DependsOn": [
        "CFHelper",
        "CsvReceiverFunction"
      ]
    }
  },
  "Outputs": {
    "CsvReceiverEndpointUrl": {
      "Description": "The root URL for the csv-receiver's endpoints.",
      "Value": { "Fn::GetAtt" : ["CsvReceiverEndpoint", "baseUrl"] }
    },
    "CsvReceiverFunctionArn": {
      "Description": "The ARN of the function that processes CSVs.",
      "Value": { "Fn::GetAtt": [ "CsvReceiverFunction", "Arn" ] }
    }
  }
}